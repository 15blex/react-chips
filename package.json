{
  "name": "react-component-boilerplate",
  "version": "0.1.0",
  "description": "A boilerplate project for react component libraries.",
  "keywords": [
    "react",
    "react-component"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gregchamberlain/react-component-boilerplate.git"
  },
  "author": "Greg Chamberlain <gregchamberlain94@gmail.com> (https://gregchamberlain.github.io)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gregchamberlain/react-component-boilerplate/issues"
  },
  "homepage": "https://github.com/gregchamberlain/react-component-boilerplate#readme",
  "scripts": {
    "start": "./node_modules/.bin/webpack-dev-server",
    "test": "jest --coverage",
    "test:watch": "jest --coverage --watch",
    "preumd": "rimraf dist",
    "umd": "NODE_ENV=production webpack --config webpack.config.production.js",
    "prebuild": "rimraf lib",
    "build": "NODE_ENV=production ./node_modules/.bin/babel src/ -d lib/",
    "prepublish": "yarn build && yarn umd"
  },
  "main": "lib/index.js",
  "peerDependencies": {
    "react": "^16.0.0",
    "react-dom": "^16.0.0"
  },
  "dependencies": {
    "prop-types": "^15.6.0"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.1",
    "babel-loader": "^7.1.2",
    "babel-plugin-module-resolver": "^2.7.1",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.10",
    "babel-preset-env": "^1.6.1",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-react": "^6.24.1",
    "enzyme": "^3.1.0",
    "enzyme-adapter-react-16": "^1.0.2",
    "eslint": "^4.9.0",
    "eslint-plugin-flowtype": "^2.39.1",
    "eslint-plugin-react": "^7.4.0",
    "flow-bin": "^0.57.3",
    "jest": "^21.2.1",
    "raf": "^3.4.0",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "react-hot-loader": "^3.1.1",
    "react-test-renderer": "16",
    "rimraf": "^2.6.2",
    "webpack": "^3.8.1",
    "webpack-dev-server": "^2.9.3"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "modules": false
        }
      ],
      "react",
      "flow"
    ],
    "plugins": [
      [
        "module-resolver",
        {
          "alias": {
            "src": "./src"
          }
        }
      ]
    ],
    "env": {
      "test": {
        "presets": [
          "env",
          "react"
        ]
      },
      "development": {
        "plugins": [
          "react-hot-loader/babel"
        ]
      },
      "production": {
        "plugins": [
          [
            "transform-react-remove-prop-types",
            {
              "ignoreFilenames": [
                "node_modules"
              ]
            }
          ]
        ]
      }
    }
  },
  "eslintConfig": {
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "env": {
      "browser": true,
      "node": true
    },
    "parser": "babel-eslint",
    "rules": {
      "quotes": [
        2,
        "single"
      ],
      "strict": [
        2,
        "never"
      ],
      "semi": [
        "error",
        "always"
      ],
      "react/jsx-uses-react": 2,
      "react/jsx-uses-vars": 2,
      "react/react-in-jsx-scope": 2,
      "flowtype/boolean-style": [
        2,
        "boolean"
      ],
      "flowtype/define-flow-type": 1,
      "flowtype/delimiter-dangle": [
        2,
        "never"
      ],
      "flowtype/generic-spacing": [
        2,
        "never"
      ],
      "flowtype/no-primitive-constructor-types": 2,
      "flowtype/no-types-missing-file-annotation": 2,
      "flowtype/no-weak-types": 2,
      "flowtype/object-type-delimiter": [
        2,
        "comma"
      ],
      "flowtype/require-parameter-type": 2,
      "flowtype/require-return-type": [
        2,
        "always",
        {
          "annotateUndefined": "never"
        }
      ],
      "flowtype/require-valid-file-annotation": 2,
      "flowtype/semi": [
        2,
        "always"
      ],
      "flowtype/space-after-type-colon": [
        2,
        "always"
      ],
      "flowtype/space-before-generic-bracket": [
        2,
        "never"
      ],
      "flowtype/space-before-type-colon": [
        2,
        "never"
      ],
      "flowtype/type-id-match": [
        2,
        "^([A-Z][a-z0-9]+)+Type$"
      ],
      "flowtype/union-intersection-spacing": [
        2,
        "always"
      ],
      "flowtype/use-flow-type": 1,
      "flowtype/valid-syntax": 1
    },
    "plugins": [
      "react",
      "flow-type"
    ]
  }
}
